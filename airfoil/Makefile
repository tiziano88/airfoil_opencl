#
# set paths for header files and libraries
#
OP_BLOCK_SIZE_1 := 64

OP2		:= ../common
#CUDA		:= $(CUDA_INSTALL_PATH)
ifdef AMDAPPSDKROOT
  OPENCL		:=$(AMDAPPSDKROOT)
endif
ifdef CUDA_HOME
  OPENCL		:=$(CUDA_HOME)
endif
export OPENCL

INC		:= -I$(OPENCL)/include -I$(OP2) -I.
LIB		:= -L$(OPENCL)/lib64 
OCLLIB	:= -L/usr/lib64 -L$(OPENCL)/lib/x86_64 -lOpenCL
#/usr/lib64/lobOpenCL.so.1
OCLINC	:= -I$(OP2) -I. $(INC)


#
# set flags for compilation and linking
#

# -Xptxas -dlcm=ca   => use L1 cache
# -Xptxas -dlcm=cg   => no L1 cache

#CCFLAGS	:= -g -fPIC -DUNIX -Wall -Wextra
#NVCCFLAGS	:= -g -G -arch=sm_20 -Xptxas=-v -use_fast_math

CCFLAGS		:= -O3 -fPIC -DUNIX -Wall -Wextra
#NVCCFLAGS	:= -O3 -maxrregcount 48 -arch=sm_20 \
#		   -Xptxas -dlcm=cg -Xptxas=-v -use_fast_math
NVCCFLAGS	:= -O3 -arch=sm_20 \
		   -Xptxas -dlcm=ca -Xptxas=-v -use_fast_math
LIBS		:= $(LIB) -lcudart
OMP		:= -fopenmp -lgomp
OP2_H		:= $(OP2)/op_seq.h $(OP2)/op_lib.h $(OP2)/op_lib_core.h
OP2_LIB		:= $(OP2)/op_lib.a

ifndef BLOCK_SIZE
  BLOCK_SIZE := 128
endif
ifndef PART_SIZE
  PART_SIZE := 128
endif
CFLAGS	:= -O3 -fPIC -DUNIX -Wall -Wextra -DOP_BLOCK_SIZE_0=$(BLOCK_SIZE) -DOP_BLOCK_SIZE_1=$(BLOCK_SIZE) -DOP_BLOCK_SIZE_2=$(BLOCK_SIZE) -DOP_BLOCK_SIZE_3=$(BLOCK_SIZE) -DOP_PART_SIZE_0=$(PART_SIZE) -DOP_PART_SIZE_1=$(PART_SIZE) -DOP_PART_SIZE_2=$(PART_SIZE) -DOP_PART_SIZE_3=$(PART_SIZE)
#-g
CXXFLAGS := $(CFLAGS)
#
# master to make all versions
#

all:		airfoil_opencl

#
# OP2 library
#

$(OP2_LIB):	$(OP2_H) $(OP2)/op_lib_core.c $(OP2)/op_lib.cpp $(OP2)/op_lib.cl.cpp
		cd $(OP2); make

#
# x86 version using kernel files generated by op2.m
#

airfoil_op:	airfoil.cpp airfoil_op.cpp airfoil_kernels.cpp \
		save_soln_kernel.cpp  save_soln.h \
		adt_calc_kernel.cpp   adt_calc.h  \
		res_calc_kernel.cpp   res_calc.h  \
		bres_calc_kernel.cpp  bres_calc.h \
		update_kernel.cpp     update.h    \
                Makefile $(OP2_H) $(OP2_LIB)
		g++ $(CFLAGS) $(INC) $(OMP) -o airfoil_op airfoil_op.cpp \
		                     airfoil_kernels.cpp $(OP2_LIB)
# 
# OpenCL version
#

airfoil_opencl: airfoil_op.cpp airfoil_kernels_ocl.o Makefile $(OP2_LIB)
		g++ $(CFLAGS) $(OCLINC) -fPIC -o airfoil_opencl airfoil_op.cpp airfoil_kernels_ocl.o $(OP2_LIB) $(OCLLIB)

airfoil_kernels_ocl.o:	airfoil_kernels.cl.cpp      \
		save_soln_kernel.cl.cpp \
		adt_calc_kernel.cl.cpp  \
		res_calc_kernel.cl.cpp  \
		bres_calc_kernel.cl.cpp \
		update_kernel.cl.cpp    \
                Makefile $(OP2_H) $(OP2_LIB) $(OP2)/op_lib.cl.cpp
		g++ $(CFLAGS) $(OCLINC) -c -o airfoil_kernels_ocl.o airfoil_kernels.cl.cpp

single: airfoil_opencl
	-ln -fs kernels_single.cl kernels.cl

double: airfoil_opencl
	-ln -fs kernels_double.cl kernels.cl

vector: airfoil_opencl
	-ln -fs kernels_vector.cl kernels.cl

#
# cleanup
#

clean:
	-rm -f airfoil_seq airfoil_op airfoil_cuda airfoil_opencl *.o
